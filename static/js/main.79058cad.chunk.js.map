{"version":3,"sources":["App.styled.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["MainTitle","styled","h1","MinorTitle","h2","Section","title","children","Form","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","onChange","pattern","required","Component","List","ul","ListItem","li","ContactList","contacts","onDeleteContact","map","contact","onClick","id","FilterLabel","FilterInput","Filter","App","filter","formSubmitHandler","data","newContact","uuidv4","some","alert","filterChangeHandler","console","log","getfilteredContacts","normilizedFilter","toLowerCase","record","includes","deleteContact","contactId","prevState","savedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79058cad.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MainTitle = styled.h1`\n  font-weight: 700;\n  font-size: 32px;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const MinorTitle = styled.h2`\n  margin: 0;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 26px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorTitle } from \"./Section.styled\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <MinorTitle>{title}</MinorTitle>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  margin: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-left: 10px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: auto;\n  height: 40px;\n  font-weight: normal;\n  font-size: 16px;\n  margin: 20px;\n  padding: 10px 20px;\n  color: #fff;\n  background-color: dodgerblue;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  border: none;\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(39, 24, 245);\n  }\n`;\n","import React, { Component } from \"react\";\nimport { Form, Label, Input } from \"./ContactForm.styled\";\nimport { Button } from \"components/Button/Button.styled\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-basis: 1/3;\n  width: 30%;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 20px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem } from \"components/ContactList/ContactList.styled\";\nimport { Button } from \"components/Button/Button.styled\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <List>\n    {contacts.map((contact) => (\n      <ListItem key={contact.id}>\n        {contact.name}: {contact.number}\n        <Button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n          Delete\n        </Button>\n      </ListItem>\n    ))}\n  </List>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: 400;\n  font-size: 18px;\n  margin-top: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  padding: 4px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FilterLabel, FilterInput } from \"./Filter.styled\";\n\nconst Filter = ({ value, onChange }) => (\n  <FilterLabel>\n    Find contacts by name{\" \"}\n    <FilterInput type=\"text\" value={value} onChange={onChange} />\n  </FilterLabel>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MainTitle } from \"./App.styled\";\nimport Section from \"components/Section/Section\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  formSubmitHandler = (data) => {\n    const { contacts } = this.state;\n    const { name, number } = data;\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    if (contacts.some((contact) => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    } else {\n      this.setState({\n        contacts: [...this.state.contacts, newContact],\n      });\n    }\n  };\n\n  filterChangeHandler = (event) => {\n    console.log(event.currentTarget.value);\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getfilteredContacts = () => {\n    const normilizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((record) =>\n      record.name.toLowerCase().includes(normilizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  componentDidMount() {\n    console.log(\"App componentDidMount\");\n\n    const savedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"App componentDidUpdate\");\n\n    console.log(prevState);\n    console.log(this.state);\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"Contacts updated\");\n\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    console.log(\"App render\");\n\n    const filteredContacts = this.getfilteredContacts();\n\n    return (\n      <>\n        <MainTitle>Phonebook</MainTitle>\n\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <Section title=\"Contacts\">\n          <Filter\n            value={this.state.filter}\n            onChange={this.filterChangeHandler}\n          />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}